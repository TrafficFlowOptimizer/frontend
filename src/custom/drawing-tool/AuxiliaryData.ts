import {
	Crossroad,
	CrossroadType,
	ExitEntrancePoint,
	FirstStageTrafficLight,
	TrafficLightDirection,
} from "../CrossroadInterface";
import { createTheme } from "@mui/material";
import { Colors } from "../../styles/MainStyles";
import { SimulationLightSymbol } from "../SimulationInterface";
import {
	faArrowUp,
	faCircle,
	faLeftLong,
	faRainbow,
	faRightLong,
	faTurnDown,
	faTurnUp,
} from "@fortawesome/free-solid-svg-icons";

export const COUNTRIES = [
	"Afghanistan",
	"Albania",
	"Algeria",
	"Andorra",
	"Angola",
	"Anguilla",
	"Antigua &amp; Barbuda",
	"Argentina",
	"Armenia",
	"Aruba",
	"Australia",
	"Austria",
	"Azerbaijan",
	"Bahamas",
	"Bahrain",
	"Bangladesh",
	"Barbados",
	"Belarus",
	"Belgium",
	"Belize",
	"Benin",
	"Bermuda",
	"Bhutan",
	"Bolivia",
	"Bosnia &amp; Herzegovina",
	"Botswana",
	"Brazil",
	"British Virgin Islands",
	"Brunei",
	"Bulgaria",
	"Burkina Faso",
	"Burundi",
	"Cambodia",
	"Cameroon",
	"Cape Verde",
	"Cayman Islands",
	"Chad",
	"Chile",
	"China",
	"Colombia",
	"Congo",
	"Cook Islands",
	"Costa Rica",
	"Cote D Ivoire",
	"Croatia",
	"Cruise Ship",
	"Cuba",
	"Cyprus",
	"Czech Republic",
	"Denmark",
	"Djibouti",
	"Dominica",
	"Dominican Republic",
	"Ecuador",
	"Egypt",
	"El Salvador",
	"Equatorial Guinea",
	"Estonia",
	"Ethiopia",
	"Falkland Islands",
	"Faroe Islands",
	"Fiji",
	"Finland",
	"France",
	"French Polynesia",
	"French West Indies",
	"Gabon",
	"Gambia",
	"Georgia",
	"Germany",
	"Ghana",
	"Gibraltar",
	"Greece",
	"Greenland",
	"Grenada",
	"Guam",
	"Guatemala",
	"Guernsey",
	"Guinea",
	"Guinea Bissau",
	"Guyana",
	"Haiti",
	"Honduras",
	"Hong Kong",
	"Hungary",
	"Iceland",
	"India",
	"Indonesia",
	"Iran",
	"Iraq",
	"Ireland",
	"Isle of Man",
	"Israel",
	"Italy",
	"Jamaica",
	"Japan",
	"Jersey",
	"Jordan",
	"Kazakhstan",
	"Kenya",
	"Kuwait",
	"Kyrgyz Republic",
	"Laos",
	"Latvia",
	"Lebanon",
	"Lesotho",
	"Liberia",
	"Libya",
	"Liechtenstein",
	"Lithuania",
	"Luxembourg",
	"Macau",
	"Macedonia",
	"Madagascar",
	"Malawi",
	"Malaysia",
	"Maldives",
	"Mali",
	"Malta",
	"Mauritania",
	"Mauritius",
	"Mexico",
	"Moldova",
	"Monaco",
	"Mongolia",
	"Montenegro",
	"Montserrat",
	"Morocco",
	"Mozambique",
	"Namibia",
	"Nepal",
	"Netherlands",
	"Netherlands Antilles",
	"New Caledonia",
	"New Zealand",
	"Nicaragua",
	"Niger",
	"Nigeria",
	"Norway",
	"Oman",
	"Pakistan",
	"Palestine",
	"Panama",
	"Papua New Guinea",
	"Paraguay",
	"Peru",
	"Philippines",
	"Poland",
	"Portugal",
	"Puerto Rico",
	"Qatar",
	"Reunion",
	"Romania",
	"Russia",
	"Rwanda",
	"Saint Pierre &amp; Miquelon",
	"Samoa",
	"San Marino",
	"Satellite",
	"Saudi Arabia",
	"Senegal",
	"Serbia",
	"Seychelles",
	"Sierra Leone",
	"Singapore",
	"Slovakia",
	"Slovenia",
	"South Africa",
	"South Korea",
	"Spain",
	"Sri Lanka",
	"St Kitts &amp; Nevis",
	"St Lucia",
	"St Vincent",
	"St. Lucia",
	"Sudan",
	"Suriname",
	"Swaziland",
	"Sweden",
	"Switzerland",
	"Syria",
	"Taiwan",
	"Tajikistan",
	"Tanzania",
	"Thailand",
	"Timor L'Este",
	"Togo",
	"Tonga",
	"Trinidad &amp; Tobago",
	"Tunisia",
	"Turkey",
	"Turkmenistan",
	"Turks &amp; Caicos",
	"Uganda",
	"Ukraine",
	"United Arab Emirates",
	"United Kingdom",
	"United States",
	"Uruguay",
	"Uzbekistan",
	"Venezuela",
	"Vietnam",
	"Virgin Islands",
	"Yemen",
	"Zambia",
	"Zimbabwe",
];

export const BASIC_INFORMATION_ERROR_MESSAGES = {
	zero_length: "All fields require input",
	invalid_country: "Such country doesn't exist",
	invalid_city: "No such city in this country",
	invalid_capacity: "Capacity needs to be a positive integer of 'infinity'",
	used_id: "This id is already in use, try another one",
};

export const CROSSROAD_MODEL_TEMPLATE: Crossroad = {
	id: "",
	name: "",
	location: "",
	creatorId: "1",
	type: CrossroadType.PRIVATE,
	roadIds: [],
	collisionIds: [],
	trafficLightIds: [],
	connectionIds: [],
};

export const EXITS_ENTRANCES_TEMPLATE: ExitEntrancePoint = {
	id: "",
	index: 0,
	type: "ENTRANCE",
	xCord: 0,
	yCord: 0,
	name: "",
	capacity: -1,
};

export const EEIPointOffset = 7.5;

export const FIRST_STAGE_TRAFFIC_LIGHT_TEMPLATE: FirstStageTrafficLight = {
	light: {
		id: "",
		index: 0,
		direction: TrafficLightDirection.FORWARD,
	},
	eeiPointIndex: 0,
};

export const LIGHTS_TURNED_ON_COLLISION_DESCRIPTION =
	"Whether the lights on both connections can be green at the same time or not." +
	"\nIf yes the collision is avoidable, but it will make cars' passage slower.\nIf not, the collision is inevitable and the lights have to be turned green one by one.";

export const tooltipTheme = createTheme({
	components: {
		MuiTooltip: {
			styleOverrides: {
				tooltip: {
					width: "12vw",
					height: "fit-content",
					fontSize: "12px",
					color: `${Colors.PRIMARY_WHITE}`,
					backgroundColor: "rgba(25, 21, 22,0.7)",
					paddingRight: "5px",
					display: "flex",
					flexDirection: "column",
					justifyContent: "flex-start",
					alignItems: "center",
				},
			},
		},
	},
});

export const TOOLTIP_ENTRANCE_DELAY = 20;

export const TOOLTIP_LEAVE_DELAY = 100;

export const lightsDirectionData = new Map<
	TrafficLightDirection,
	SimulationLightSymbol
>([
	[
		TrafficLightDirection.ENTIRE,
		{
			symbol: faCircle,
			symbolSize: "sm",
			symbolTopShift: 0,
			symbolLeftShift: 0,
			symbolRotation: undefined,
		},
	],
	[
		TrafficLightDirection.LEFT,
		{
			symbol: faLeftLong,
			symbolSize: "lg",
			symbolTopShift: -3,
			symbolLeftShift: -3,
			symbolRotation: undefined,
		},
	],
	[
		TrafficLightDirection.RIGHT,
		{
			symbol: faRightLong,
			symbolSize: "lg",
			symbolTopShift: -3,
			symbolLeftShift: -3,
			symbolRotation: undefined,
		},
	],
	[
		TrafficLightDirection.FORWARD,
		{
			symbol: faArrowUp,
			symbolSize: "lg",
			symbolTopShift: -3,
			symbolLeftShift: 0,
			symbolRotation: undefined,
		},
	],
	[
		TrafficLightDirection.ARROW_LEFT,
		{
			symbol: faTurnUp,
			symbolSize: "lg",
			symbolTopShift: -5,
			symbolLeftShift: 0,
			symbolRotation: 270,
		},
	],
	[
		TrafficLightDirection.ARROW_RIGHT,
		{
			symbol: faTurnDown,
			symbolSize: "lg",
			symbolTopShift: -5,
			symbolLeftShift: 0,
			symbolRotation: 270,
		},
	],
	[
		TrafficLightDirection.UTURN,
		{
			symbol: faRainbow,
			symbolSize: "2xl",
			symbolTopShift: 0,
			symbolLeftShift: 0,
			symbolRotation: undefined,
		},
	],
	[
		TrafficLightDirection.LEFT_RIGHT,
		{
			symbol: faRainbow,
			symbolSize: "2xl",
			symbolTopShift: 0,
			symbolLeftShift: 0,
			symbolRotation: undefined,
		},
	],
	[
		TrafficLightDirection.LEFT_FORWARD,
		{
			symbol: faRainbow,
			symbolSize: "2xl",
			symbolTopShift: 0,
			symbolLeftShift: 0,
			symbolRotation: undefined,
		},
	],
	[
		TrafficLightDirection.RIGHT_FORWARD,
		{
			symbol: faRainbow,
			symbolSize: "2xl",
			symbolTopShift: 0,
			symbolLeftShift: 0,
			symbolRotation: undefined,
		},
	],
	[
		TrafficLightDirection.UTURN_LEFT,
		{
			symbol: faRainbow,
			symbolSize: "2xl",
			symbolTopShift: 0,
			symbolLeftShift: 0,
			symbolRotation: undefined,
		},
	],
]);
